<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- enable Method level [vs URL level] authorization  This work for ROOT WEB APPLICATION Level scanned components
          Does NOT recognize WEB Application level components - for THAT  need to place enable line in Dispatcher-servlet-->
    <security:global-method-security pre-post-annotations="enabled"/>

    <!-- security:http enables security filter mechanism...name space configuration is activated -->
    <!-- use-expressions enables URL level authorization - allows SPEL syntax-->
    <security:http use-expressions="true">

        <security:intercept-url pattern="/emp" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/emp1" access="hasRole('ROLE_ADMIN')"/>

        <security:form-login
                login-page="/login"
                default-target-url="/home"
                always-use-default-target="true"
                authentication-failure-url="/loginfailed"/>
        <!-- END of comment out  for BASIC Login -->

        <security:logout logout-success-url="/logout"
                         delete-cookies="JSESSIONID"/>

    </security:http>


    <!-- Database security "custom queries are because we have used our own schema...	-->
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider>
            <security:password-encoder ref="passwordEncoder"/>
            <security:jdbc-user-service
                    data-source-ref="dataSource"
                    users-by-username-query="select username,password,enabled from credentials where username=?"
                    authorities-by-username-query="select u1.username, u2.authority from credentials u1, authority u2
				                                                     where u1.username = u2.EMAIL and u1.username =?"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
    </bean>

    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/rangers?useSSL=false" />
        <property name="username" value="root" />
        <property name="password" value="root" />
    </bean>
</beans>
